package entities;
// Generated 2017-09-04 21:49:36 by Hibernate Tools 5.1.0.Alpha1

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import java.util.List;

import javax.persistence.Id;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 * Users generated by hbm2java
 */


@Entity
@Table(name = "users", catalog = "TaskManager", uniqueConstraints = { @UniqueConstraint(columnNames = "username"),
		@UniqueConstraint(columnNames = "Email") })
@NamedQueries({
@NamedQuery(name = "loginAndPassword", query = "FROM Users u WHERE u.username = :username AND u.password = :password"),
@NamedQuery(name = "loginOrEmail", query = "FROM Users u WHERE u.username = :username OR u.email = :email"),
@NamedQuery(name = "searchByUsername", query = "FROM Users u WHERE u.username = :username")
})
public class Users implements java.io.Serializable {

	private Integer userId;
	private String username;
	private String password;
	private String email;
	
	
	private List<Projects> projects;

	
	public Users() {
	}

	public Users(String username, String password, String email, List<Projects> projects) {
		this.username = username;
		this.password = password;
		this.email = email;
		this.projects = projects;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "user_id", unique = true, nullable = false)
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@Column(name = "username", unique = true, nullable = false, length = 45)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", nullable = false, length = 45)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "Email", unique = true, nullable = false, length = 45)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}
	
	
	@OneToMany(cascade=CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "user")
	public List<Projects> getProjects() {
		return projects;
	}

	public void setProjects(List<Projects> projects) {
		this.projects = projects;
	}


}
